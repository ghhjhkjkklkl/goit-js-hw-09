{"mappings":"AAOA,SAASA,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACT,GAAIH,EACF,OAAO,IAAII,QAAQ,C,SAAEN,E,MAAUC,IAE/BM,OAAQ,sBAAoBP,QAAiBC,SAE9CA,GAdcO,SAASC,cAAc,SAE/BC,iBAAiB,SAAUX,GAgBtCA,EAAc,EAAG,MACdY,MAAK,EAACX,SAAEA,EAAQC,MAAEA,MACjBW,QAAQC,IAAI,uBAAqBb,QAAiBC,UAEnDa,OAAM,EAACd,SAAEA,EAAQC,MAAEA,MAClBW,QAAQC,IAAI,sBAAoBb,QAAeC","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst newPromise = document.querySelector('.form');\n\nnewPromise.addEventListener('submit', createPromise);\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      return new Promise({ position, delay });\n    } else {\n      reject (`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay)\n};\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// feedbackForm.addEventListener('submit', evt => {\n//     evt.preventDefault();\n//     const formData = new FormData(feedbackForm);\n//     formData.forEach((value, name) => console.log({value, name}));\n//     localStorage.removeItem(STOREGE_KEY);\n//     evt.currentTarget.reset();\n// });"],"names":["$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","setTimeout","Promise","reject","document","querySelector","addEventListener","then","console","log","catch"],"version":3,"file":"03-promises.cf0a6a89.js.map"}