{"mappings":"YAOA,SAASA,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACT,GAAIH,EACF,OAAO,IAAII,QAAQ,CAAEN,WAAUC,UAE/BM,OAAQ,sBAAuCC,OAAfR,EAAS,QAAYQ,OAANP,EAAM,SAEtDA,GAdcQ,SAASC,cAAc,SAE/BC,iBAAiB,SAAUZ,GAgBtCA,EAAc,EAAG,MACda,MAAK,SAAAC,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MACjBa,QAAQC,IAAI,uBAAwCP,OAAfR,EAAS,QAAYQ,OAANP,EAAM,UAE3De,OAAM,SAAAH,G,IAAGb,EAAQa,EAARb,SAAUC,EAAKY,EAALZ,MAClBa,QAAQC,IAAI,sBAAqCP,OAAfR,EAAS,QAAYQ,OAANP,EAAM,U","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst newPromise = document.querySelector('.form');\n\nnewPromise.addEventListener('submit', createPromise);\n\n\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  setTimeout(() => {\n    if (shouldResolve) {\n      return new Promise({ position, delay });\n    } else {\n      reject (`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay)\n};\n\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n\n// feedbackForm.addEventListener('submit', evt => {\n//     evt.preventDefault();\n//     const formData = new FormData(feedbackForm);\n//     formData.forEach((value, name) => console.log({value, name}));\n//     localStorage.removeItem(STOREGE_KEY);\n//     evt.currentTarget.reset();\n// });"],"names":["$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","setTimeout","Promise","reject","concat","document","querySelector","addEventListener","then","param","console","log","catch"],"version":3,"file":"03-promises.0a0b6309.js.map"}